{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.isLoading = new Subject();\n    this.token = '530d9dc1b99da7bde5ca7e33b414b14fd27437f623208b70504cbf060a3641db';\n    this.baseUrl = 'https://gorest.co.in/public/v2/';\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'auth': this.token\n    });\n  }\n  getAllUsers() {\n    return this.http.get(this.baseUrl + \"users\", {\n      headers: this.headers\n    });\n  }\n  addUser(body) {\n    return this.http.post(this.baseUrl + \"products\", body, {\n      headers: this.headers\n    });\n  }\n  editUser(body, userId) {\n    return this.http.put(this.baseUrl + \"products/\" + userId, body, {\n      headers: this.headers\n    });\n  }\n  deleteUser(userId) {\n    return this.http.delete(this.baseUrl + \"products/\" + userId, {\n      headers: this.headers\n    });\n  }\n  getAllCategories() {\n    return this.http.get(this.baseUrl + \"products/categories\");\n  }\n  show() {\n    this.isLoading.next(true);\n  }\n  hide() {\n    this.isLoading.next(false);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,OAAO,QAAQ,MAAM;;;AAK9B,OAAM,MAAOC,WAAW;EAWtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVxB,cAAS,GAAG,IAAIH,OAAO,EAAW;IAElC,UAAK,GAAG,kEAAkE;IAC1E,YAAO,GAAG,iCAAiC;IAE3C,YAAO,GAAG,IAAID,WAAW,CAAC;MACxB,cAAc,EAAE,kBAAkB;MAClC,MAAM,EAAE,IAAI,CAACK;KAEd,CAAC;EACsC;EAIxCC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,OAAO,EAAE;MAAEC,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACzE;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAEG,IAAI,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACnF;EAEAI,QAAQ,CAACF,IAAS,EAAEG,MAAW;IAC7B,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACP,OAAO,GAAG,WAAW,GAAGM,MAAM,EAAEH,IAAI,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAC5F;EACAO,UAAU,CAACF,MAAW;IAEpB,OAAO,IAAI,CAACV,IAAI,CAACa,MAAM,CAAC,IAAI,CAACT,OAAO,GAAG,WAAW,GAAGM,MAAM,EAAE;MAAEL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACzF;EAEAS,gBAAgB;IACd,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,qBAAqB,CAAC;EAC5D;EAGAW,IAAI;IACF,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC3B;EAEAC,IAAI;IACF,IAAI,CAACF,SAAS,CAACC,IAAI,CAAC,KAAK,CAAC;EAC5B;;AA1CWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["HttpHeaders","Subject","UserService","constructor","http","token","getAllUsers","get","baseUrl","headers","addUser","body","post","editUser","userId","put","deleteUser","delete","getAllCategories","show","isLoading","next","hide","factory","providedIn"],"sourceRoot":"","sources":["E:\\angular apps\\YOLO_Test\\crudApp\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  isLoading = new Subject<boolean>();\n\n  token = '530d9dc1b99da7bde5ca7e33b414b14fd27437f623208b70504cbf060a3641db';\n  baseUrl = 'https://gorest.co.in/public/v2/';\n\n  headers = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'auth': this.token\n\n  })\n  constructor(private http: HttpClient) { }\n\n\n\n  getAllUsers() {\n    return this.http.get(this.baseUrl + \"users\", { headers: this.headers });\n  }\n\n  addUser(body: any) {\n    return this.http.post(this.baseUrl + \"products\", body, { headers: this.headers });\n  }\n\n  editUser(body: any, userId: any) {\n    return this.http.put(this.baseUrl + \"products/\" + userId, body, { headers: this.headers });\n  }\n  deleteUser(userId: any) {\n\n    return this.http.delete(this.baseUrl + \"products/\" + userId, { headers: this.headers });\n  }\n\n  getAllCategories() {\n    return this.http.get(this.baseUrl + \"products/categories\");\n  }\n\n\n  show() {\n    this.isLoading.next(true);\n  }\n\n  hide() {\n    this.isLoading.next(false);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}